//#include "Topic_1/lesson_1.hpp"
//#include "Topic_1/lesson_2_to_5.hpp"
//#include "Topic_1/lesson_7.hpp"
//#include "Topic_1/lesson_8.hpp"
//#include "Topic_1/lesson_9.hpp"

#include "Topic_2/lesson_2.hpp"
#include "Topic_2/lesson_4_1.hpp"
#include "Topic_2/lesson_4_2_3.hpp"

//#include "../SearchServer.hpp"

int main()
{
	/* Topic_1: Итераторы */
    //top_1_lesson_1();
    //top_1_lesson_2_to_5(); // Концепция полуинтервалов / Итераторы в конструкторах контейнеров / Итераторы в методах контейнеров
    //top_1_lesson_7(); // Стандартные алгоритмы — рекурсия. ХАНОЙСКАЯ БЛЯТЬ БАШНЯ!
    //top_1_lesson_8(); // Стандартные алгоритмы из algorithm. MERGE SORT!
	//top_1_lesson_9(); // Выводим результаты поиска страницами

	/* Topic_2 Алгоритмы поиска */
	/*
	* --------------------------------------------------------------------------------------------------------------
	Что и как хотим найти ? / Где ищем ? | Неотсортированный вектор | Отсортированный вектор | Множество или словарь
	*---------------------------------------------------------------------------------------------------------------
	1. Проверка существования						ф. find				binary_search				м. contains, или
																									м. count
	*---------------------------------------------------------------------------------------------------------------
	2. Проверка существования и											ф. lower_bound
	поиск первого подходящего						ф. find				и проверка найденного	    м. find
	элемента															элемента на равенство
																		искомому				
	*---------------------------------------------------------------------------------------------------------------
	3. Поиск первого элемента,						ф. find_if			ф. lower_bound				м.lower_bound
	большего или равного данному					
	*---------------------------------------------------------------------------------------------------------------
	4. Поиск первого элемента,						ф. find_if			ф. upper_bound			    м. upper_bound 
	большего данного								
	*---------------------------------------------------------------------------------------------------------------
	5. Подсчёт количества							ф. count			ф. equal_range и 
																		расстояние между 
																		итераторами					м. count
	*---------------------------------------------------------------------------------------------------------------
	6. Перебор по всем													ф. equal_range и 
	подходящим элементам							Ф. find в цикле		цикл от левой до 
																		правой границы		    	м. find
	*---------------------------------------------------------------------------------------------------------------
	* ф - функция
	* м - метод
	*/

	//top_2_lesson_2();		// Урок 2. Поиск в неотсортированном векторе
	//top_2_lesson_4_1();   // Урок 4. Поиск в отсортированном векторе, словаре и множестве. Задание 1.
	top_2_lesson_4_2_3();     // Урок 4. Поиск в отсортированном векторе, словаре и множестве. Задание 2-3.

	/* Поисковая система */							
	//run();

	return 0;
}
