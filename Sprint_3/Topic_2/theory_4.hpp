// Перегрузка операций присваивания
#include <iostream>

using namespace std;

struct Vector2D {
    Vector2D() = default;

    Vector2D(double x0, double y0)
            : x(x0), y(y0) {
    }

    // левый аргумент операции += — это текущий экземпляр класса,
    // а правый передаётся в виде параметра операции
    Vector2D& operator+=(Vector2D right) {
        // Результат операции сохраняется в текущем экземпляре класса
        x += right.x;
        y += right.y;

        // return *this позволяет вернуть ссылку на текущий объект
        return *this;
    }
    double x = 0.0;
    double y = 0.0;
};

Vector2D operator+(Vector2D left, Vector2D right) {
    // аргумент left принят по значению; можно спокойно модифицировать
    // это значение внутри операции и вернуть в виде результата
    return left += right;
}


int top_2_theory_4()
{
    Vector2D v1{1, 2};
    Vector2D v2{6, 1};

    // Сначала вычислится выражение в скобках (v1 += v2), в результате чего
    //   v1 примет значение {13, 2}, а само выражение вернёт ссылку на v1.
    // Затем вычислится выражение v2 + v1, в результате чего
    //   в переменную v3 будет записано значение {25, 2}.
    // Переменная v2 своего значения не изменит
    Vector2D v3 = v2 + (v1 += v2);

    std::cout << v1.x << ","s << v1.y << endl; // Выведет 13,2
    cout << v2.x << ","s << v2.y << endl; // Выведет 6,1
    cout << v3.x << ","s << v3.y << endl; // Выведет 25,2

    return 0;
}